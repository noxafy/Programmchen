#!/bin/bash

function die() {
  mes=$1
  shift
  printf "$mes\n" "$*"
  exit 1
}

[ ! -t 0 ] && die "Please start this script interactively."
disks=$(diskutil list external physical)

[[ -z "$disks" ]] && echo "No external device found." && exit 0

if [[ $(echo "$disks" | wc -l) -le 4 ]]; then
  echo "Only one external device detected:"
  echo "$disks"
  read -p "Do you want to unmount that? (y/n) [y]: " ans
  case $ans in
  n)
    ;;
  *)
    volume=$(echo "$disks" | grep 'disk\d\+$' | awk '{print $NF}')
    [[ -z "$volume" ]] && die "Failed to extract volume id from line."
    ;;
  esac
else
  echo "$disks"
  read -p "Which volume do you want to unmount (col: IDENTIFIER)? " volume
fi

function unmount0() {
  if [[ "$1" =~ disk.*s.* ]]; then
    diskutil unmount "$1"
  else
    diskutil unmountDisk "$1"
  fi
}

if [[ -z $volume ]]; then
  echo "Nothing unmounted."
else
  if [[ "$volume" =~ disk* && -n $(echo "$disks" | grep -- "$volume") ]]; then
    res=$(unmount0 "$volume" 2>&1)
    echo "$res"
    pid=$(echo "$res" | grep -oE "PID \d+" | cut -d ' ' -f 2)
    if [[ -n $pid ]]; then
      ps -p $pid
      read -p "Do you want to kill this process (PID $pid)? (y/n) [y]: " ans2
      if [[ -z $ans2 || $ans2 == y ]]; then
        kill $pid || die "Failed to kill process PID $pid"
        unmount0 "$volume"
      else
        echo "Nothing killed. Try again later."
      fi
    fi
  else
    echo "Invalid answer."
    exit 1
  fi
fi
