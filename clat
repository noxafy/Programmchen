#!/bin/bash

usage="Usage: \e[1m$(basename $0)\e[0m -h | [-s|-l] [-n|-d] [\e[4mfile\e[0m]"
default_name="main.tex"
goal=
SHORT=
DELETE=
help="Compiles a tex file. Complies multiple times if citation is used, so that literature section is right. Uses pdflatexmkrc if available.
$usage
	\e[1m-h\e[0m	Display this message and exit.
	\e[1m-s\e[0m	Force compile only one time with pdflatex.
	\e[1m-l\e[0m	Force compile multiple times.
	\e[1m-n\e[0m	Don't delete auto-generated files.
	\e[1m-d\e[0m	Force delete auto-generated files.
	\e[4mfile\e[0m	.tex-file to compile (default: $default_name).
"

function die() {
  mes=$1
  shift
  [[ -n "$mes" ]] && printf "$mes\n" "$@"
  exit 1
}

function cltex() {
  local goal=$1
  [[ -z "$goal" && -e "main.tex" ]] && goal="main.tex"
  if [[ ! -e "$goal" || "$goal" != *.tex ]]; then
    echo "Please give a valid tex file." && return 1
  fi

  local -i removed=0
  local -a tokill=(.aux -blx.bib .bbl .bcf .blg .dvi .fdb_latexmk .fls .idx .ilg .ind .lof .log .lot .out .out.ps .run.xml .snm .spl .xcp)
  [[ $SHORT == "false" ]] && tokill+=(.nav .toc)
  for postfix in ${tokill[@]}; do
    local file="${goal:0:$((${#goal}-4))}$postfix"
    [[ -e "$file" ]] && rm -v "$file" && ((removed++))
  done
  echo "$removed files removed"
}

function open_it() {
  if hash open &>/dev/null; then
    open "${1:0:$((${#1}-4))}.pdf" || die "Could not open file: $goal"
  fi
  if [[ $DELETE == "true" ]]; then
    cltex "$1"
  fi
}

while [[ $1 == -* ]]; do
  case $1 in
    -h|--help)
      printf "$help"
      exit 0
      ;;
    -s)
      SHORT=true
      ;;
    -l)
      SHORT=false
      ;;
    -n)
      DELETE=false
      ;;
    -d)
      DELETE=true
      ;;
    --)
      break;
      ;;
    -*)
      die "Wrong argument: %s\n$usage -- See -h for more help." "$1"
      ;;
  esac
  shift
done

goal="${1:-$default_name}"
goal_dir=$(dirname "$goal")
[[ -n "$2" ]] && multiple=true || multiple=

if [[ -z $SHORT ]]; then
  if ! cat "$goal" | grep -e '\\cite' -e '\\citep' -e '\\parencite' -e '\\\citet' -e '\\textcite' &>/dev/null; then # -e '\\ref'
    SHORT=true
  else
    SHORT=false
  fi
fi

if [[ -z $DELETE ]]; then
  if [[ -e "${goal:0:$((${#goal}-3))}toc" ]]; then
    DELETE=false
  else
    DELETE=true
  fi
fi

if [[ -r "$PWD/pdflatexmkrc" ]]; then
  latexmk -pdf -r pdflatexmkrc "$goal" || die
  open_it "$goal"
elif [[ -n "$goal" ]]; then
  if [[ ! -r "$goal" ]]; then
    echo "Please give an existing and readable file. See -h for more help."
    exit 1
  fi
  pdflatex -output-directory "$goal_dir" "$goal" || die 'First latex compilation run failed'
  if [[ $SHORT == "false" ]]; then
    if cat "$goal" | grep '^\\printbibliography' >/dev/null; then
      biber "${goal:0:$((${#goal}-4))}"
    else
      bibtex "${goal:0:$((${#goal}-3))}aux"
    fi
    pdflatex -output-directory "$goal_dir" "$goal" || die 'Second latex compilation run failed'
    pdflatex -output-directory "$goal_dir" "$goal" || die 'Third latex compilation run failed'
  fi
  open_it "$goal"
else
 die "Please give a valid tex file. See -h for more help."
fi
