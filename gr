#!/bin/bash

obj=""

site="https://www.youtube.com/user/Gronkh/videos"
help="Prints all recent Gronkh videos on YouTube.
Usage: \e[1mgr\e[0m [ -h | -o | \e[4mseries\e[0m ]
	\e[1m-h\e[0m	Displays this message and exists.
	\e[1m-o\e[0m	Opens Gronkhs YouTube-site directly.
	\e[4mseries\e[0m	Filters for special series containing \e[4mseries\e[0m (case insensitive).
Used site: $site
"

case "$1" in
  -h)
    printf "$help"
    exit 0
    ;;
  -o)
    f "$site"
    exit 0
    ;;
  -l)
    noLinks=1
    ;;
  -*)
    printf "Wrong argument. $help"
    exit 1
    ;;
  *)
    obj="$1"
    ;;
esac

waitnet -s

src=$(curl -s "$site")
if [[ -n $src ]]; then
  content=$(echo "$src" | pup --charset utf8 '.yt-lockup-content')
  linksHTML=$(echo "$content" | pup --charset utf8 "div h3 a" | grep "$obj")
  titles=$(echo "$linksHTML" | pup --charset utf8 'a attr{title}' | perl -MHTML::Entities -pe 'decode_entities($_);')
  links=$(echo "$linksHTML" | grep -o 'href="/watch?v=[^"]*' | sed 's/href="/https:\/\/www.youtube.com/')

  cnt=0
  IFS=$'\n'
  for title in $titles; do
    ((cnt++))
    echo "$cnt: $title"
  done

  if [[ $cnt -eq 0 ]]; then
    if [[ -n $obj ]]; then
      echo "No results found for \"$obj\". Try another."
    else
      echo "No results found. Probably a sript failure."
    fi
  elif [[ $cnt -eq 1 ]]; then
    printf "Only one result found. Do you want to open it? (y/n) [y]: "
    read ans
    case $ans in
    ""|j|y|J|Y|Yes)
      f "$links"
      ;;
    *)
      ;;
    esac
  else
    printf "Which one do you want to open? (1-${cnt}/q) [q]: "
    read ans
    if [[ $ans =~ ^[0-9]+$ ]]; then
      if [[ $ans -gt 0 && $ans -le $cnt ]]; then
        f $(echo "$links" | sed -n "${ans}p")
      else
        echo "Wrong answer. Integer is zero or too high: $ans."
      fi
    else
      case $ans in
      q|"")
        echo "Nothing opened."
        ;;
      *)
        echo "Wrong answer. No integer: $ans"
        ;;
      esac
    fi
  fi
  #if [[ $noLinks ]]; then
    #res=$(echo $src | grep -o 'href="/watch?v=[^"]*">[^<]*' | sed 's/href="[^"]*">//' | sed 's/">/'$'\t''/' | grep "$obj")
    #else
    #res=$(echo $src | grep -o 'href="/watch?v=[^"]*">[^<]*' | sed 's/href="/https:\/\/www.youtube.com/' | sed 's/">/'$'\t''/' | grep "$obj")
    #fi
else
  echo "Fetching from $site failed."
fi
