#/bin/bash

timeout=60
sendNote=
output=2 # 2=outall; 1=outnosuccesswithoutwaiting; if empty, no output
usage="Usage: \e[1mwaitnet\e[0m -h | [-q|-s] [-n] [-t \e[4mtimeout\e[0m]"
help="Test for internet connection establishment.
$usage
	\e[1m-h\e[0m	Displays this message and exits.
	\e[1m-s\e[0m	No output on success without waiting (best for scripts).
	\e[1m-q\e[0m	No console output, except errors.
	\e[1m-n\e[0m	Send also a note message on connection found or timeout.
	\e[1m-t\e[0m	Specify a timeout in seconds (default: 60).
"

while [[ -n $1 ]]; do
  case $1 in
    -h)
      printf "$help"
      exit 0
      ;;
    -q)
      output=
      ;;
    -s)
      output=1
      ;;
    -n)
      sendNote=1
      ;;
    -t)
      case $2 in
        [0-9][0-9][0-9][0-9][0-9]|[0-9][0-9][0-9][0-9]|[0-9][0-9][0-9]|[0-9][0-9]|[0-9])
          #if [[ $timeout -lt 3 ]]; then
          #   echo "Wrong argument: $2 - Please give a timeout in seconds (3-32767)."
          #   exit 1
          #fi
          timeout=$2
          shift
          ;;
        *)
          echo "Wrong argument: $2 - Please give a timeout in seconds (3-32767). See -h for more help."
          exit 1
          ;;
      esac
      ;;
    *)
      printf "Wrong argument: %s\n$usage -- See -h for more help.\n" "$1"
      exit 1
      ;;
  esac
  shift
done

log() {
  if [[ $output ]]; then
    printf "%s\n" "$@"
  fi
}

sendNoteF() {
  if [[ $sendNote ]]; then
    note -m "$*" || echo "This script has a dependency to \"note\" to send notification messages."
  fi
}

fail() {
  sendNoteF "$* failed!"
  log "$* failed!"
  exit 1
}

#for preformance, first test if internet connection is established
# time is 40ms more when not working, but 100ms less when working (and the letter is most of the times)
wifi=$(ping -t 3 -c 1 google.com 2>/dev/null)
if [[ $? -eq 0 ]]; then
  if [[ $output -gt 1 ]]; then
    echo 'Internet connection avaliable!'
  fi
  exit 0
fi

#toggle wifi on
wifiDevice=en0
wifiDeviceStatus=$(networksetup -getairportpower "$wifiDevice")
if [[ $? -ne 0 ]]; then
  wifiDevice=$(networksetup -listallhardwareports | grep -A 2 "Wi-Fi" | grep "Device" | awk '{print $2}')
  wifiDeviceStatus=$(networksetup -getairportpower "$wifiDevice")
fi
if [[ -n $(echo "$wifiDeviceStatus" | grep Off) ]]; then
  log "Toggling Wi-Fi ($wifiDevice) on ..."
  networksetup -setairportpower "$wifiDevice" on || fail "Toggling Wi-Fi on"
fi

#test on ssid connected
cnt=0
wifi=$(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I | sed -n 13p)
while [[ ${#wifi} -lt 19 ]]; do
  waitflag=1
  if [[ $((cnt % 3)) -eq 0 ]]; then
    log "Waiting for SSID ..."
  fi
  sleep 1
  ((cnt++))
  if [[ $cnt -ge $timeout ]]; then
    fail "Timeout: Auto-connecting to a SSID"
  fi
  wifi=$(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I | sed -n 13p)
done
if [[ $output -gt 1 || -n $waitflag ]]; then
  wifi=$(echo "${wifi}" | xargs)
  log "Connected to $wifi"
fi
timeout=$((timeout-cnt))

#test on internet connection
cnt=0
wifi=$(ping -t 3 -c 1 google.com 2>/dev/null)
while [[ $? -ne 0 ]]; do
  waitflag=1
  if [[ $((cnt % 3)) -eq 0 ]]; then
    log "Waiting for internet connection ..."
  fi
  sleep 1
  ((cnt++))
  if [[ $cnt -ge $timeout ]]; then
    fail "Timeout: Internet connection detection"
  fi
  wifi=$(ping -t 3 -c 1 google.com 2>/dev/null)
done

sendNoteF 'Internet connection avaliable!'
if [[ $output -gt 1 || -n $waitflag ]]; then
  log 'Internet connection avaliable!'
fi
