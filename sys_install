#!/bin/bash

thisdir=$(dirname "$PWD/$BASH_SOURCE")
if [[ ! -e $thisdir ]]; then
  thisdir=$(dirname "$BASH_SOURCE")
fi
usage="\e[1minstall\e[0m [-h]"
help="An install script for computer reset.
$usage
	\e[1m-h\e[0m	Displays this message and exists.
	
Warning: Do NOT put in \$PATH (name collision)! Leave in place.
"

case $1 in
  -h)
    printf "$help"
    exit 0
    ;;
  -*)
    printf "Wrong argument: %s\n$usage -- See -h for more help.\n" "$1"
    exit 1
    ;;
esac

####################################################
### Install
####################################################

die() {
  echo "ERROR: $*!" >&2
  exit 1
}

c() {
  while [[ -n $1 ]]; do
    origin="$thisdir/$1"
    target="$PWD/$1"
    printf "Copying $origin to $target"
    printf "($(du -sh "$origin" | awk '{print $1}')) ...\n"
    cp -a "$origin" "$target/" || die "Copying $origin to $target failed!"
    shift
  done
}

installWifi() {
  ssid=$1
  passwd=$2
  while [[ -z "$ssid" ]]; do
    read -p "Please enter a SSID to connect to (WPA2 only; s = show all available): " ssid
    if [[ "$ssid" = s ]]; then
      echo "Available networks (WPA2 only):"
      /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -s | grep 'WPA2'
    fi
  done
  if [[ -n $(networksetup -listpreferredwirelessnetworks en0 | grep "$ssid") ]]; then
    printf "%s already installed!" "$ssid"
    return;
  fi
  while [[ -z "$password" ]]; do
    read -p "Please enter the password for $ssid: " passwd
  done
  networksetup -addpreferredwirelessnetworkatindex Airport "$ssid" 0 WPA2 "$passwd"
}

waitUser() {
  read -p "Press [Enter] to continue ..." trash
}

#go home first
cd "$HOME" || die "cd to $HOME failed!"

# check, if .bash_profile is installed
# if not, running first time, installing it and other shit
if [[ -z "$D" ]]; then
  c .bash_profile .m2/settings.xml .tm_properties .ssh .password-store .gnupg
  #keyboard layout
  cd "Library" || die "cd to $HOME/Library failed!"
  c "Keyboard Layouts" # - keyboard layout
  
  #install terminal layouts
  open "$thisdir/*.terminal"
  #let user choose layout and restart terminal & install script
  echo "Please close this window now and start this script again with you favourite terminal layout."
  printf "\e[4mHint\e[0m: Just set it to standard layout.\n"
  printf "\e[4mHint2\e[0m: Activate secure text entry.\n"
  printf "\e[4mHint3\e[0m: At this point, also switch keyboard layout as desired. "
  waitUser
  exit 0
else
  echo "Skipped preferences installation."
fi

#prepare installs
#install keychains ???

ping -t 1 -c 1 google.com 2> /dev/null 1> /dev/null
if [[ $? -ne 0 ]]; then #first time. no internet installed
  echo "Creating internet connection ..."
  networksetup -setairportpower en0 on
  #wlan login
  installWifi AdMiNet #pass not installed yet, so paste password here before running
  #AEG
  printf "Turning Wi-Fi off ..."
  networksetup -setairportpower en0 off
  echo " and on ..."
  networksetup -setairportpower en0 on
  sleep 3
  ping -t 3 -c 1 google.com 2> /dev/null 1> /dev/null
  if [[ $? -ne 0 ]]; then
    echo "Auto connection failed. Please select the network from menu bar."
    echo "This script will continue as soon as an internet connection is found."
    ping -t 3 -c 1 google.com 2> /dev/null 1> /dev/null
    while [[ $? -ne 0 ]]; do
      sleep 1
      ping -t 3 -c 1 google.com 2> /dev/null 1> /dev/null
    done
  fi
else
  echo "Skipped internet installation."
fi

if [[ -d dashboard ]]; then
  echo "Installing dashboard apps ..."
  c dashboard
  cd "dashboard"
  for wgt in *; do
    echo "Install: $wgt"
    open "$wgt"
    waitUser
  done
  cd ".."
  rm -rf dashboard
else
  echo "Skipped Dashboard apps (no \"dashboard\" directory available at $PWD)"
fi

if [[ -z $(which brew) ]]; then
  #install brew
  echo "Installing Homebrew ..."
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" || die "Installing brew failed."
  echo "Tapping caskroom ..."
  brew tap caskroom/cask || die "brew tap caskroom/cask failed."
else
  echo "Skipped brew installation."
fi

if [[ ! -e /Applications/Dropbox.app/ ]]; then
  #brew install dropbox
  echo "Installing Dropbox ..."
  brew cask install dropbox || die "brew cask install dropbox failed!"
  #log in dropbox
  echo "Please log in to dropbox!"
  sleep 1
  open /Applications/Dropbox.app/
  waitUser #deps in Programmchen now available
else
  echo "Skipped dropbox installation."
fi

#install adobe, contains key?
#install microsoft programs

#open app store for apple id
#xcode-select --install ?

#IntelliJ config folder
#install intelliJ, user must gui install and key

#brew cask install
#brew install
#app store
#Thunderbird folder
#IdeaProjects
#other files (documents, pictures, music)
#place minecraft in /Applications
#copy power point draft uniwue

# install other wifis

####################################################
### Manual
####################################################

# - notational velocity: ~/Dropbox/Org/Notational/
# - spotify login
# - one note login, ggf Excel, Word, PowerPoint
# - import firefox bookmarks
# - calender login google
# - import newsflow opml
# - os shortcuts
# - install "RZUWsec"

cd "$thisdir"