#!/bin/bash

DEBUG=""
youtube="https://www.youtube.com/"
site=""
usage="Usage: \e[1m$(basename $0)\e[0m -h | \e[4msite\e[0m [\e[4mseries\e[0m] | \e[4mquery\e[0m \e[4m...\e[0m"
help="Commandline interaction with YouTube.
$usage
	\e[1m-h\e[0m	Displays this message and exists.
	\e[1m-d\e[0m	Debug mode: Don't open any link, but print it out.
	\e[4msite\e[0m	Videos site (from user or channel) to grep videos from.
	\e[4mseries\e[0m	Filters for special series containing \e[4mseries\e[0m (case insensitive).
	\e[4mquery\e[0m	Search a specified query on YouTube.
"
while [[ -n $1 ]]; do
  case "$1" in
  -h)
    printf "$help"
    exit 0
  ;;
  -d)
    DEBUG=true
    shift
    ;;
  -*)
    printf "Wrong argument: %s\n$usage -- See -h for more help.\n" "$1"
    exit 1
  ;;
  *)
    break;
  ;;
  esac
done

function fetchVideos() {
  waitnet -s || exit 1
  src=$(curl -sS "$1")
  if [[ -n $src ]]; then
    content=$(echo "$src" | pup --charset utf8 '.yt-lockup-content')
    linksHTML=$(echo "$content" | pup --charset utf8 "div h3 a" | grep "$2")
    titles=$(echo "$linksHTML" | pup --charset utf8 'a attr{title}' | perl -MHTML::Entities -pe 'decode_entities($_);')
    links=$(echo "$linksHTML" | grep -o 'href="/watch?v=[^"]*' | sed 's/href="/https:\/\/www.youtube.com/')

    cnt=0
    IFS=$'\n'
    for title in $titles; do
      ((cnt++))
      echo "$cnt: $title"
    done

    if [[ $cnt -eq 0 ]]; then
      if [[ -n $2 ]]; then
        echo "No results found for \"$2\". Try another."
      else
        echo "No results found. Probably a script failure."
      fi
    elif [[ $cnt -eq 1 ]]; then
      printf "Only one result found. Do you want to open it? (y/n) [y]: "
      read ans
      case $ans in
        ""|j|y|J|Y|Yes)
          [[ -z $DEBUG ]] && f -i "$links" || echo "f -i $links"
        ;;
        *)
        ;;
      esac
    else
      printf "Which one do you want to open? (1-${cnt}/q) [q]: "
      read ans
      if [[ $ans =~ ^[0-9]+$ ]]; then
        if [[ $ans -gt 0 && $ans -le $cnt ]]; then
          result=$(echo "$links" | sed -n "${ans}p")
          [[ -z $DEBUG ]] && f "$result" || echo "f $result"
        else
          echo "Wrong answer. Integer is zero or too high: $ans."
        fi
      else
        case $ans in
          q|"")
            echo "Nothing opened."
          ;;
          *)
            echo "Wrong answer. No integer: $ans"
          ;;
        esac
      fi
    fi
  else
    echo "Fetching from $site failed."
  fi
}

if [[ "$1" = ${youtube}* ]]; then
  if [[ "$1" = */videos ]]; then
    fetchVideos "$1" "$2"
  else
    [[ -z $DEBUG ]] && f -i "$1" || echo "f -i $1"
  fi
else
  [[ -z $DEBUG ]] && f yt "$*" || echo "f yt $*"
fi
